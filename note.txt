laravel 8x
latest token to github is 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

ubuntu 20.04

===========================================================

install laravel with version
composer create-project laravel/laravel:^8.0 example-app
composer create-project --prefer-dist laravel/laravel:^8.0 test3
composer create-project --prefer-dist laravel/laravel:9.0.0 ver900 //note this use webpack.mix.js not use vite.config.js

cara membuat factory
php artisan make:factory PostFactory

Cara buat controller dengan resources dan connect db / model
php artisan make:controller PhotoController --model=Photo --resource

===========================================================
path mvc
m = \app\Models\User.php
v = \resources\views\welcome.blade.php (kenapa ada .blade nya karena ini pakai engine view nya laravel)
c = \app\Http\Controllers\Controller.php

=========================================================

Blade is templating engine
- sebuah template engine yang ada di laravel, bisa menggunakan php, yg akan dikompel ke php
- ex sintax= menampilkan data variabel dengan sintax {{nama}}
- fitur ini hanya bisa dipakai jika ada file yang ada .blade.php

==========================================================

use tinker to interaction for laravel us
ex: php artisan tinker 
if after enter, your is connected now with laravel

- bcrypt is sintax in laravel for parse data to encripted, ex, to fill password and key
how to use, this to used
- php artisan tinker
- $user = new User
- $user->name = 'azizan'
- $user->email = 'azizan@gmail.com'
- $user-> password = bcrypt('12345')
- $user->save();

to see all
$user->all()

and this return is collection data

$user->findOrFail(20) => to show this error, where your query is not found

=========================================

make model with cli

- open terminal
- enter to directory laravel
- php artisan make:model
- php artisan migrate = to migrate once on update
- php artisan migrate:fresh = to migrate all 

Post::pluck('title') = to show just title in mysql
Post::where('title', 'judul ketiga', 'judul ketiga berubah')->update(['excerpt' => 'excerpt post 3 berubah'])
============================================

Route model binding

- to protected routes

===========================================
data dummy
User::create([
	'name'=>'azizan',
	'email'=>'azizan@gmail.com',
	'password'=>bcrypt('12345')
]);


Post::create([
'title' => 'Judul Pertama',
'category_id' => 1,
'user_id' => 1,
'excerpt' => 'ipsum dolor sit amet consectetur adipisicing elit. Quod deserunt, quibusdam amet error',
'slug' => 'judul-pertama',
'body' => '<p> ipsum dolor sit amet consectetur adipisicing elit. Quod deserunt, quibusdam amet error doloremque sapiente pariatur nobis vitae ullam quidem assumenda reprehenderit libero, officiis velit minus consequatur perspiciatis explicabo repudiandae! Sit maiores distinctio recusandae</p><p>veritatis consequuntur nulla itaque animi voluptates necessitatibus quos, corrupti saepe! Facilis eligendi suscipit, odio temporibus quas culpa voluptates vitae, hic numquam quia veniam harum vel! Ipsa sit odit molestias, iste asperiores voluptatibus officia suscipit id exercitationem. Eius deleniti fuga, repellat officia sequi, itaque facilis rerum temporibus ipsum natus sunt totam praesentium tempore unde laudantium quas beatae at ducimus. Eos iste ipsum quas vitae dolore ab, qui illo maxime quod dolor officiis voluptas similique necessitatibus. Recusandae nam sed cum alias omnis dolore tenetur, distinctio nesciunt iusto eius?</p>'
]);

Category::create([
'name' => 'Web Programing',
'slug' => 'web-programming'
])

==========================================

belongsTo = many to one
hasMany = one to many

==========================================

db seed

aplications\coba-laravel-8x\database\seeders\DatabaseSeeder.php
activated this line -> \App\Models\User::factory(10)->create();

php artisan db:seed -> to add data dummy can this add to database us
php artisan migrate:fresh --seed -> this 2 function's run, first run migrate to fresh migrate, and second's to fill data dummy into database

==================================

N + 1 problem
- he N+1 query problem happens when your code executes N additional query statements to fetch the same data that could have been retrieved when executing the primary query.
to use this issue is, you must install library ini laravel and broser,
in laravel install 'composer require itsgoingd/clockwork'
then use add-ons in browser search "Clockwork" and then install
===================================

proses upload image
- change .env
- use script 'return $request->file('image')->store('post-images');'
- install php artisan storage:link (because you mush link path storage with path public, that can use to access with users)
- after you install storage:link, your path public can add folder storage, this connect from /storage to /public/storage

======================================
cara buat middleware
- buat artisan make:middleware [name middleware] / cntrl+shiff+p make middleware
- nah kemudian akan dibuatkan file middleware
- to use middleware you must in to kernel file 'laravel/aplications/web-blog/app/Http/Kernel.php'
- add class in list routeMiddleware

=====================================

use GATE - laravel
- benefit is you can use on global
- to create gate you must to laravel/aplications/web-blog/app/Providers/AppServiceProvider.php
- link documentations is https://laravel.com/docs/8.x/authorization#gates
ex.
in AppServiceProvider
 Gate::define('admin', function(User $user){
            return $user->slug === 'azhar-azizan-al-fattaah';
        });

in view
{{-- @can is connect to your gate, and used name @can with your define gate--}}
      @can('admin') 
        <h6 class="sidebar-heading d-flex justify-centent-between align-items-center px-3 mt-4 mb-1 text-muted">
          <span>Adminisrator</span>
        </h6>
        <ul class="nav flex-column">
          <li class="nav-item">
            <a class="nav-link {{ Request::is('dashboard/categories*') ? 'active' : ''}}" aria-current="page" href="/dashboard/categories">
              <span data-feather="grid"></span>
              Post Categories
            </a>
          </li>
        </ul>
      @endcan

==========================================
this to add field to table in database
- cntrl+shiff+p 
- make:migrate
- use name add_username_to_user_table
- used model users
- edit up and drop(optional)
- php artisan migrate
- if you want to drop your colomn you can write
	php artisan migrate:rollback

==============================================
note to crud in tag article
- setting model = php artisan make:model -m Tag (use to single word not many word, ex: 'tag' not to 'tags'
- setting migrations
- setting cli migrations = php atisan migrate
- build controller: php artisan make:controller AdminTagController --model=Tag --resource
- setting routes 
- setting controller to show in FE
